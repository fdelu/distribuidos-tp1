version: "3"
services:
  rabbitmq:
    build:
      dockerfile: ./src/system/rabbitmq/Dockerfile
    volumes:
      - type: bind
        source: ./src/system/rabbitmq/rabbitmq.conf
        target: /etc/rabbitmq/rabbitmq.conf
      - type: bind
        source: ./src/system/rabbitmq/definitions.json
        target: /definitions.json
    ports:
      - 15672:15672
    networks:
      - internal_net

  input:
    extends:
      file: src/system/compose-base-service.yaml
      service: base
    build:
      args:
        WORKDIR: input
    networks:
      - outside_net
      - internal_net
    depends_on:
      parsers:
        condition: service_healthy

  parsers:
    extends:
      file: src/system/compose-base-service.yaml
      service: base
    build:
      args:
        WORKDIR: parsers
    deploy:
      mode: replicated
      replicas: ${PARSERS_SCALE}
    depends_on:
      joiners:
        condition: service_healthy

  joiners:
    extends:
      file: src/system/compose-base-service.yaml
      service: base
    build:
      args:
        WORKDIR: joiners
    deploy:
      mode: replicated
      replicas: ${JOINERS_SCALE}
    depends_on:
      rain_aggregators:
        condition: service_healthy

  rain_aggregators:
    extends:
      file: src/system/compose-base-service.yaml
      service: base
    build:
      args:
        WORKDIR: aggregators/rain
      target: aggregators
    deploy:
      mode: replicated
      replicas: ${RAIN_AGGREGATORS_SCALE}
    depends_on:
      rabbitmq:
        condition: service_healthy

  rain_reducer:
    extends:
      file: src/system/compose-base-service.yaml
      service: base
    build:
      args:
        WORKDIR: reducers
    depends_on:
      rabbitmq:
        condition: service_healthy

  output:
    extends:
      file: src/system/compose-base-service.yaml
      service: base
    build:
      args:
        WORKDIR: output
    networks:
      - outside_net
      - internal_net
    depends_on:
      rabbitmq:
        condition: service_healthy

  client:
    build:
      dockerfile: ./src/client/Dockerfile
    volumes:
      - type: bind
        source: ./src/client/data
        target: /tmp/data
      - type: bind
        source: config.ini
        target: /config.ini
    networks:
      - outside_net

networks:
  outside_net:
    ipam:
      driver: default
  internal_net:
    ipam:
      driver: default
